<?xml version="1.0"?>
<robot name="vineyard_mower" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- Properties -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  
  <!-- Robot dimensions -->
  <xacro:property name="base_width" value="1.5"/>
  <xacro:property name="base_length" value="0.5"/>
  <xacro:property name="base_height" value="0.2"/>
  <xacro:property name="robot_height" value="0.5"/>
  
  <!-- Wheel properties -->
  <xacro:property name="wheel_radius" value="0.15"/>
  <xacro:property name="wheel_width" value="0.3"/>
  <xacro:property name="track_width" value="1.4"/>
  
  <!-- Sensor properties -->
  <xacro:property name="sensor_height" value="0.1"/>
  
  <!-- Materials -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  
  <material name="dark_grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  
  <material name="orange">
    <color rgba="1.0 0.423529411765 0.0392156862745 1.0"/>
  </material>
  
  <material name="grey">
    <color rgba="0.2 0.2 0.2 1.0"/>
  </material>
  
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>

  <!-- Base Link -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 ${base_height/2}" rpy="0 0 0"/>
      <mass value="50.0"/>
      <inertia ixx="7.58333" ixy="0.0" ixz="0.0" iyy="7.58333" iyz="0.0" izz="9.375"/>
    </inertial>
  </link>

  <!-- Upper chassis for sensors -->
  <link name="upper_chassis">
    <visual>
      <origin xyz="0 0 ${(robot_height - base_height)/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length*0.6} ${base_width*0.6} ${robot_height - base_height}"/>
      </geometry>
      <material name="grey"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${(robot_height - base_height)/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${base_length*0.6} ${base_width*0.6} ${robot_height - base_height}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 ${(robot_height - base_height)/2}" rpy="0 0 0"/>
      <mass value="10.0"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>

  <joint name="upper_chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="upper_chassis"/>
    <origin xyz="0 0 ${base_height}" rpy="0 0 0"/>
  </joint>

  <!-- Left track wheel -->
  <link name="left_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="5.0"/>
      <inertia ixx="0.1125" ixy="0" ixz="0" iyy="0.1125" iyz="0" izz="0.1125"/>
    </inertial>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="left_wheel"/>
    <origin xyz="0 ${track_width/2} ${wheel_radius}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Right track wheel -->
  <link name="right_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="black"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="${PI/2} 0 0"/>
      <mass value="5.0"/>
      <inertia ixx="0.1125" ixy="0" ixz="0" iyy="0.1125" iyz="0" izz="0.1125"/>
    </inertial>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <parent link="base_link"/>
    <child link="right_wheel"/>
    <origin xyz="0 ${-track_width/2} ${wheel_radius}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
  </joint>

  <!-- Sensor mount (center of robot) -->
  <link name="sensor_mount">
    <visual>
      <origin xyz="0 0 ${sensor_height/2}" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.05" length="${sensor_height}"/>
      </geometry>
      <material name="dark_grey"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 ${sensor_height/2}" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.05" length="${sensor_height}"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 ${sensor_height/2}" rpy="0 0 0"/>
      <mass value="1.0"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
  </link>

  <joint name="sensor_mount_joint" type="fixed">
    <parent link="upper_chassis"/>
    <child link="sensor_mount"/>
    <origin xyz="0 0 ${(robot_height - base_height)/2 + sensor_height/2}" rpy="0 0 0"/>
  </joint>

  <!-- LiDAR sensor -->
  <link name="lidar_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.04" length="0.05"/>
      </geometry>
      <material name="red"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.04" length="0.05"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.5"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="lidar_joint" type="fixed">
    <parent link="sensor_mount"/>
    <child link="lidar_link"/>
    <origin xyz="0 0 ${sensor_height + 0.025}" rpy="0 0 0"/>
  </joint>

  <!-- Front camera (Intel RealSense) -->
  <link name="front_camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.09 0.025 0.025"/>
      </geometry>
      <material name="blue"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.09 0.025 0.025"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="front_camera_joint" type="fixed">
    <parent link="upper_chassis"/>
    <child link="front_camera_link"/>
    <origin xyz="${base_length*0.3} 0 ${(robot_height - base_height)/4}" rpy="0 0 0"/>
  </joint>

  <!-- Rear camera (Intel RealSense) -->
  <link name="rear_camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.09 0.025 0.025"/>
      </geometry>
      <material name="blue"/>
    </visual>
    
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.09 0.025 0.025"/>
      </geometry>
    </collision>
    
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.15"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
    </inertial>
  </link>

  <joint name="rear_camera_joint" type="fixed">
    <parent link="upper_chassis"/>
    <child link="rear_camera_link"/>
    <origin xyz="${-base_length*0.3} 0 ${(robot_height - base_height)/4}" rpy="0 0 ${PI}"/>
  </joint>

  <!-- Gazebo plugins and properties -->
  <gazebo reference="base_link">
    <material>Gazebo/Orange</material>
  </gazebo>
  
  <gazebo reference="upper_chassis">
    <material>Gazebo/Grey</material>
  </gazebo>
  
  <gazebo reference="left_wheel">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>
  
  <gazebo reference="right_wheel">
    <material>Gazebo/Black</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="lidar_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="front_camera_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="rear_camera_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- ros2_control -->
  <ros2_control name="GazeboSystem" type="system">
    <hardware>
      <plugin>gz_ros2_control/GazeboSimSystem</plugin>
    </hardware>
    
    <joint name="left_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity"/>
      <state_interface name="position"/>
    </joint>
    
    <joint name="right_wheel_joint">
      <command_interface name="velocity">
        <param name="min">-10</param>
        <param name="max">10</param>
      </command_interface>
      <state_interface name="velocity"/>
      <state_interface name="position"/>
    </joint>
  </ros2_control>

  <!-- Gazebo ros2_control plugin -->
  <gazebo>
    <plugin filename="gz_ros2_control-system" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
      <parameters>$(find vineyard_mower_description)/config/control_config.yaml</parameters>
      <ros>
        <namespace></namespace>
        <remapping>/clock:=/clock</remapping>
      </ros>
    </plugin>
  </gazebo>

  <!-- LiDAR sensor plugin -->
  <gazebo reference="lidar_link">
    <!-- <sensor name="gpu_lidar" type="gpu_lidar">
     -->
      <sensor name="lidar" type="gpu_lidar">
      <pose>0 0 0 0 0 0</pose>
      <topic>scan</topic>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.141592</min_angle>
            <max_angle>3.141592</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

  <!-- Front camera sensor plugin (Intel RealSense simulation) -->
  <gazebo reference="front_camera_link">
    <!-- RGB Camera -->
    <sensor name="front_camera" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <topic>front_camera/image</topic>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>10.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
    
    <!-- Depth Camera -->
    <sensor name="front_depth_camera" type="depth_camera">
      <pose>0 0 0 0 0 0</pose>
      <topic>front_camera/depth_image</topic>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R_FLOAT32</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>10.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

  <!-- Rear camera sensor plugin (Intel RealSense simulation) -->
  <gazebo reference="rear_camera_link">
    <!-- RGB Camera -->
    <sensor name="rear_camera" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <topic>rear_camera/image</topic>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>10.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
    
    <!-- Depth Camera -->
    <sensor name="rear_depth_camera" type="depth_camera">
      <pose>0 0 0 0 0 0</pose>
      <topic>rear_camera/depth_image</topic>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R_FLOAT32</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>10.0</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

  <!-- IMU sensor for additional odometry -->
  <link name="imu_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.1"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="imu_joint" type="fixed">
    <parent link="upper_chassis"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>

  <!-- IMU sensor plugin -->
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <pose>0 0 0 0 0 0</pose>
      <topic>imu</topic>
      <update_rate>100</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
              <bias_mean>0.0000075</bias_mean>
              <bias_stddev>0.0000008</bias_stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
              <bias_mean>0.1</bias_mean>
              <bias_stddev>0.001</bias_stddev>
            </noise>
          </z>
        </linear_acceleration>
        <orientation_reference_frame>
          <localization>GRAV_UP</localization>
        </orientation_reference_frame>
      </imu>
      <always_on>1</always_on>
      <visualize>true</visualize>
    </sensor>
  </gazebo>

</robot>
